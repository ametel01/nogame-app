name: CI

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -e {0}

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PNPM
      uses: pnpm/action-setup@v3
      with:
        version: 8
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Lint
      id: lint
      run: |
        # Save the lint output to a file
        pnpm run lint > lint_output.txt || echo "::set-output name=lint_failed::true"
        
        # Check if there were any errors or warnings in the output
        if grep -q "error" lint_output.txt || grep -q "warning" lint_output.txt; then
          cat lint_output.txt
          echo "Linting issues found. Please fix them before merging."
          exit 1
        fi
        
        # Display the output for debugging
        cat lint_output.txt
    
    - name: Type check
      run: pnpm run type-check
    
    - name: Build
      run: pnpm run build
      
  # Uncomment the test job if you have tests in your project
  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #
  #   strategy:
  #     matrix:
  #       node-version: [18.x]
  #
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Setup PNPM
  #     uses: pnpm/action-setup@v3
  #     with:
  #       version: 8
  #   
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'pnpm'
  #   
  #   - name: Install dependencies
  #     run: pnpm install
  #   
  #   - name: Run tests
  #     run: pnpm test 